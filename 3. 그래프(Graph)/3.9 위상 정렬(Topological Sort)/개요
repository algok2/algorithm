
# 사용
- 순서가 정해져 있는 작업을 차례로 수행해야 할 때 그 순서를결정해 주기 위해 사용하는 알고리즘

# 시간 복잡도
- O(V+E)
  ※ V: 정점의 갯수, E: 간선의 갯수

# 특징
- DAG(Directed Acyclic Graph)에만 적용이 가능
- 시작점이 존재해야 함
- 두가지 해결책을 낸다
  1) 현재 그래프가 위상 정렬이 가능한지
  2) 위상 정렬이 가능하다면 그 결과는 무엇인지

# 구현 방법
 1) 스택(Stack)을 이용한 방식
 2) 큐(Queue)를 이용한 방식
 
# 큐(Queue)를 이용한 위상 정렬
 1) 진입차수(indgree)가 0인 정점을 큐에 삽입한다.
 2) 큐에서 원소를 꺼내 연결된 모든 간선을 제거한다
 3) 간선 제거 이후에 진입차수(indgree)가 0이 된 정점을 큐에 삽입한다.
 4) 큐가 빌 때까지 2번 ~ 3번 과정을 반복한다.
 모든 원소를 방문하기 전에 큐가 빈다면 사이클이 존재하는 것이고, 모든 원소를 방문했다면 큐에서 꺼낸 순서가 위상 정렬의 결과이다.
